#!/bin/bash -e

# The configure hook is called every time one the following actions happen:
# - initial snap installation
# - snap refresh
# - whenever the user runs snap set|unset to change a configuration option

source $SNAP/usr/bin/utils.sh

$SNAP/usr/bin/configure_hook_ros.sh

# Make sure correct the camera-model is selected
OPT="camera-model"
VALUE="$(snapctl get driver.${OPT})"
if [ -n "${VALUE}" ]; then
  case "${VALUE}" in
  "None") ;;
  "intel_realsense_d435") ;;
  "orbbec_astra") ;;
  "stereolabs_zed") ;;
  "stereolabs_zedm") ;;
  "stereolabs_zed2") ;;
  "stereolabs_zed2i") ;;
  "stereolabs_zedx") ;;
  "stereolabs_zedxm") ;;
  *)
    log_and_echo "'${VALUE}' is not a supported value for '${OPT}'." \
      "Possible values are: None, intel_realsense_d435, orbbec_astra, \
      stereolabs_zed, stereolabs_zedm, stereolabs_zed2, stereolabs_zed2i, \
      stereolabs_zedx, stereolabs_zedxm'"
    exit 1
    ;;
  esac
fi

# Make sure correct the camera-model is selected
OPT="lidar-model"
VALUE="$(snapctl get driver.${OPT})"
if [ -n "${VALUE}" ]; then
  case "${VALUE}" in
  "None") ;;
  "slamtec_rplidar_a2") ;;
  "slamtec_rplidar_a3") ;;
  "slamtec_rplidar_s1") ;;
  "slamtec_rplidar_s2") ;;
  "slamtec_rplidar_s3") ;;
  "velodyne_puck") ;;
  *)
    log_and_echo "'${VALUE}' is not a supported value for '${OPT}'." \
      "Possible values are: None, slamtec_rplidar_a2, slamtec_rplidar_a3, \
      slamtec_rplidar_s1, slamtec_rplidar_s2, slamtec_rplidar_s3, velodyne_puck"
    exit 1
    ;;
  esac
fi

# Make sure ROS 2 nodes parameters value is a boolean
OPTS="mecanum include-camera-mount"
for OPT in ${OPTS}; do
  VALUE="$(snapctl get driver.${OPT})"
  if [ -n "${VALUE}" ]; then
    case "${VALUE}" in
    "True") ;;
    "False") ;;
    *)
      log_and_echo "configure hook: '${VALUE}' is not a supported value for ${OPT}." \
        "Possible values are True or False."
      exit 1
      ;;
    esac
  fi
done

# Get the transport setting using snapctl
OPT="webui.layout"
LAYOUT="$(snapctl get ${OPT})"

# Only exit with status 1 if conditions are not met
if [ ! -f "${SNAP_COMMON}/foxglove-${LAYOUT}.json" ]; then
  log_and_echo "'${SNAP_COMMON}/foxglove-${LAYOUT}.json' does not exist."
  exit 1
fi

# restart services with new ROS 2 config
for service in daemon web-ui web-ws; do
  if snapctl services ${SNAP_NAME}.${service} | grep -qw active; then
    snapctl restart ${SNAP_NAME}.${service}
    log "Restarted ${SNAP_NAME}.${service}"
  fi
done

# $SNAP/usr/bin/foxglove-set-namespace.sh