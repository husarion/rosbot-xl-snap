name: rosbot-xl
adopt-info: rosbot-xl
license: Apache-2.0
summary: The rosbot-xl
description: |
  The rosbot-xl snap contains all the necessary software to bring the robot up
  such as controller, robot state publisher etc.

  It offers the following parameters,

  - ros-domain-id
  - ros-localhost-only
  - fastdds-default-profiles-file
  - transport
  - serial-port
  - driver.namespace
  - driver.mecanum
  - driver.include-camera-mount
  - driver.camera-model
  - driver.lidar-model

  which can be set as follows, e.g.,

    snap set rosbot-xl driver.mecanum=True

grade: stable
confinement: strict
base: core22

contact: https://github.com/husarion/rosbot-xl-snap/issues
issues: https://github.com/husarion/rosbot-xl-snap/issues
website: https://husarion.com/

architectures:
  - build-on: amd64
    build-for: amd64
  # - build-on: amd64
  #   build-for: arm64
  - build-on: arm64
    build-for: arm64

slots:
  shm-slot:
    interface: shared-memory
    write: ['*'] # paths are relative to /dev/shm

plugs:
  shm-plug:
    interface: shared-memory
    shared-memory: shm-slot
    private: false

apps:

  daemon:
    command: usr/bin/launcher.sh
    command-chain: [usr/bin/ros_setup.sh]
    daemon: simple
    install-mode: enable
    plugs: [network, network-bind, shm-plug]
    slots: [shm-slot]
    extensions: [ros2-humble-ros-base]

  db-server:
    command: usr/bin/db_server_launcher.sh
    daemon: simple
    install-mode: enable
    plugs: [network, network-bind, shutdown]

  rosbot-xl:
    command: usr/bin/launcher.sh
    command-chain: [usr/bin/check_daemon_running.sh, usr/bin/ros_setup.sh]
    plugs: [network, network-bind, shm-plug]
    slots: [shm-slot]
    extensions: [ros2-humble-ros-base]

  flash:
    command: usr/bin/flash_launcher.sh
    plugs: [raw-usb, network-bind]
    extensions: [ros2-humble-ros-base]

  teleop:
    command: usr/bin/teleop_launcher.sh
    command-chain: [usr/bin/ros_setup.sh]
    plugs: [network, network-bind, shm-plug]
    slots: [shm-slot]
    extensions: [ros2-humble-ros-base]

  print-serial-number:
    command: usr/bin/serial_number_launcher.sh
    command-chain: [usr/bin/ros_setup.sh]
    plugs: [network, network-bind, shm-plug]
    slots: [shm-slot]
    extensions: [ros2-humble-ros-base]

  start:
    command: usr/bin/start_launcher.sh

  stop:
    command: usr/bin/stop_launcher.sh

  reset-stm32:
    command: usr/bin/reset_stm32.py
    plugs: [raw-usb, network-bind]

  config-ftdi:
    command: usr/bin/ftdi-eeprom-conf.py
    plugs: [raw-usb, network-bind]

  web-ui:
    command: usr/bin/caddy_launcher.sh
    daemon: simple
    install-mode: disable
    plugs: [network, network-bind]

  web-ws:
    command: usr/bin/bridge_launcher.sh
    command-chain: [usr/bin/ros_setup.sh]
    daemon: simple
    install-mode: disable
    plugs: [network, network-bind, shm-plug]
    slots: [shm-slot]
    extensions: [ros2-humble-ros-base]

  start-web-ui:
    command: usr/bin/start_web_ui_launcher.sh

  stop-web-ui:
    command: usr/bin/stop_web_ui_launcher.sh

parts:
  rosbot-xl:
    plugin: colcon
    source: https://github.com/husarion/rosbot_xl_ros.git
    source-branch: "0.11.4"
    build-packages: 
      - python3-vcstool
    stage-packages: 
      - stm32flash
      - libusb-1.0-0
      - usbutils
    override-pull: |
      craftctl default

      vcs import $CRAFT_PART_SRC < $CRAFT_PART_SRC/rosbot_xl/rosbot_xl_hardware.repos
      cp -r $CRAFT_PART_SRC/ros2_controllers/diff_drive_controller $CRAFT_PART_SRC/
      cp -r $CRAFT_PART_SRC/ros2_controllers/imu_sensor_broadcaster $CRAFT_PART_SRC/
      rm -rf $CRAFT_PART_SRC/ros2_controllers
      rm -r $CRAFT_PART_SRC/rosbot_xl_gazebo
      # Ignore so that rosdep doesn't pull deps
      # and colcon doesn't build
      # touch $CRAFT_PART_SRC/rosbot_xl_gazebo/COLCON_IGNORE

      # Set the snap version from the git tag
      # The grade is set to 'stable' if the latest entry in the git history
      # is the tag itself, otherwise set to devel
      version="$(git describe --always --tags| sed -e 's/^v//;s/-/+git/;y/-/./')"
      [ -n "$(echo $version | grep "+git")" ] && grade=devel || grade=stable
      craftctl set version="$version"
      craftctl set grade="$grade"

  # rosbot-xl:
  #   plugin: colcon
  #   source: https://github.com/husarion/rosbot_xl_manipulation_ros.git
  #   # source-branch: "0.11.0"
  #   build-packages: 
  #     - python3-vcstool
  #   stage-packages: 
  #     - stm32flash
  #     - libusb-1.0-0
  #     - usbutils
  #   override-pull: |
  #     craftctl default

  #     vcs import $CRAFT_PART_SRC < $CRAFT_PART_SRC/rosbot_xl_manipulation/rosbot_xl_manipulation.repos
  #     vcs import $CRAFT_PART_SRC < $CRAFT_PART_SRC/rosbot_xl_ros/rosbot_xl/rosbot_xl_hardware.repos
  #     vcs import $CRAFT_PART_SRC < $CRAFT_PART_SRC/open_manipulator_x/open_manipulator_x.repos

  #     cp -r $CRAFT_PART_SRC/ros2_controllers/diff_drive_controller $CRAFT_PART_SRC/
  #     cp -r $CRAFT_PART_SRC/ros2_controllers/imu_sensor_broadcaster $CRAFT_PART_SRC/
  #     rm -rf $CRAFT_PART_SRC/ros2_controllers
  #     rm -r $CRAFT_PART_SRC/rosbot_xl_ros/rosbot_xl_gazebo
  #     rm -r $CRAFT_PART_SRC/rosbot_xl_manipulation_gazebo
  #     # Ignore so that rosdep doesn't pull deps
  #     # and colcon doesn't build
  #     # touch $CRAFT_PART_SRC/rosbot_xl_gazebo/COLCON_IGNORE

  #     # Set the snap version from the git tag
  #     # The grade is set to 'stable' if the latest entry in the git history
  #     # is the tag itself, otherwise set to devel
  #     version="$(git describe --always --tags| sed -e 's/^v//;s/-/+git/;y/-/./')"
  #     [ -n "$(echo $version | grep "+git")" ] && grade=devel || grade=stable
  #     craftctl set version="$version"
  #     craftctl set grade="$grade"

  teleop:
    plugin: nil
    stage-packages:
      - ros-humble-teleop-twist-keyboard
      - ros-humble-teleop-twist-joy

  # web-ui:
  #   plugin: nil
  #   build-packages:
  #     - curl
  #   build-environment:
  #     - CADDY_RELEASE: "2.7.4"
  #   override-build: |
  #     set -x
  #     craftctl default
  #     curl -L https://github.com/caddyserver/caddy/releases/download/v${CADDY_RELEASE}/caddy_${CADDY_RELEASE}_linux_${CRAFT_ARCH_BUILD_FOR}.deb -o caddy.deb
  #     dpkg -i caddy.deb

  web-server:
    plugin: dump
    source: 
      - on amd64: https://github.com/caddyserver/caddy/releases/download/v2.7.4/caddy_2.7.4_linux_amd64.deb
      - on arm64: https://github.com/caddyserver/caddy/releases/download/v2.7.4/caddy_2.7.4_linux_arm64.deb
    source-type: deb

  web-ui:
    plugin: nil
    build-packages:
      - curl
    override-build: |
      # Use the Snapcraft build directory which is writable
      cd $SNAPCRAFT_PART_BUILD
      curl -L https://github.com/husarion/foxglove-studio/releases/download/v1.0.1/web-build.tar.gz -o foxglove.tar.gz
      mkdir -p www/foxglove
      tar -xzf foxglove.tar.gz -C www/foxglove
      rm foxglove.tar.gz
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/local
      cp -r www $SNAPCRAFT_PART_INSTALL/usr/local

  web-ws:
    plugin: nil
    stage-packages:
      - ros-humble-foxglove-bridge
      - ros-humble-rosbridge-server
      - ros-humble-bond
      - ros-humble-control-msgs
      - ros-humble-controller-manager-msgs
      - ros-humble-image-transport-plugins
      - ros-humble-map-msgs
      - ros-humble-nav2-msgs
      - ros-humble-tf2-msgs
      - ros-humble-robot-localization

  db-server:
    plugin: nil
    stage-packages:
      - dbus
      - curl
      - netcat

  pip3-dependencies:
    plugin: python
    source: .
    build-packages:
      - python3-pip
    python-packages:
      - pyftdi

  # copy local scripts to the snap usr/bin
  local-files-ros:
    plugin: dump
    source: snap/local/ros_common/
    organize:
      '*.sh': usr/bin/
      '*.xml': usr/share/rosbot-xl/config/

  local-files:
    plugin: dump
    source: snap/local/
    organize:
      '*.sh': usr/bin/
      '*.py': usr/bin/
      '*.yaml': usr/share/rosbot-xl/config/
      '*.xml': usr/share/rosbot-xl/config/
      '*.json': usr/share/rosbot-xl/config/
      'Caddyfile': usr/share/rosbot-xl/config/
